#lang sicp

(+ 1 2)

(define (square x) (* x x))

(define s '[1 2 3])

(define (abs x)
  (cond ((< x 0) (- x))
        (#t x)))

(define (square-sum a b) (+ (* a a) (* b b)))

(define (large-sum-squares a b c)
  (cond ((and (< a b) (< a c)) (square-sum b c))
        ((and (< b a) (< b c)) (square-sum a c))
        (else (square-sum a b))))